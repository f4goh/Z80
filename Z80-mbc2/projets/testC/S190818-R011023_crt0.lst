                                      1 ;--------------------------------------------------------------------------
                                      2 ;
                                      3 ;  S190818-R011023_crt0.s
                                      4 ;
                                      5 ;  S190818-R011023 - SDCC modified crt0.s for the Z80-MBC2 - HW ref: A040618
                                      6 ;
                                      7 ;
                                      8 ;  REQUIRED: IOS S220718-R290823 (and following revisions unless stated otherwise)
                                      9 ;
                                     10 ;  REQUIRED: S290923_Z80-MBC2.rel
                                     11 ;
                                     12 ;
                                     13 ;  To compile (use SDCC toolchain):    sdasz80 -plosgff -o S190818-R011023_crt0.s
                                     14 ;
                                     15 ;
                                     16 ;  HOW TO USE:
                                     17 ;  Put the generated file S190818-R011023_crt0.rel into the working directory
                                     18 ;  (the directory where your current source files are stored) together
                                     19 ;  with the file S290923_Z80-MBC2.rel (compiled from S290923_Z80-MBC2.c)
                                     20 ;
                                     21 ;
                                     22 ;  Tested with SDCC 4.0.2
                                     23 ;
                                     24 ;
                                     25 ;  CHANGELOG:
                                     26 ;  S190818          First revision.
                                     27 ;  S190818-R011023  Added IRQ low level support;
                                     28 ;                   Basic I/O moved to S290923_Z80-MBC2.c.
                                     29 ;
                                     30 ;
                                     31 ;--------------------------------------------------------------------------
                                     32 ;--------------------------------------------------------------------------
                                     33 ;  crt0.s - Generic crt0.s for a Z80
                                     34 ;
                                     35 ;  Copyright (C) 2000, Michael Hope
                                     36 ;
                                     37 ;  This library is free software; you can redistribute it and/or modify it
                                     38 ;  under the terms of the GNU General Public License as published by the
                                     39 ;  Free Software Foundation; either version 2, or (at your option) any
                                     40 ;  later version.
                                     41 ;
                                     42 ;  This library is distributed in the hope that it will be useful,
                                     43 ;  but WITHOUT ANY WARRANTY; without even the implied warranty of
                                     44 ;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
                                     45 ;  GNU General Public License for more details.
                                     46 ;
                                     47 ;  You should have received a copy of the GNU General Public License 
                                     48 ;  along with this library; see the file COPYING. If not, write to the
                                     49 ;  Free Software Foundation, 51 Franklin Street, Fifth Floor, Boston,
                                     50 ;   MA 02110-1301, USA.
                                     51 ;
                                     52 ;  As a special exception, if you link this library with other files,
                                     53 ;  some of which are compiled with SDCC, to produce an executable,
                                     54 ;  this library does not by itself cause the resulting executable to
                                     55 ;  be covered by the GNU General Public License. This exception does
                                     56 ;  not however invalidate any other reasons why the executable file
                                     57 ;   might be covered by the GNU General Public License.
                                     58 ;--------------------------------------------------------------------------
                                     59 
                                     60     .module crt0
                                     61     .globl  _main
                                     62 
                                     63     .area   _HEADER (ABS)
                                     64     ;; Reset vector
    00000000                         65     .org    0
    00000000 C3r00r01         [10]   66     jp  init
                                     67 
    00000008                         68     .org    0x08
    00000008 FB               [ 4]   69     ei
    00000009 ED 4D            [14]   70     reti
    00000010                         71     .org    0x10
    00000010 FB               [ 4]   72     ei
    00000011 ED 4D            [14]   73     reti
    00000018                         74     .org    0x18
    00000018 FB               [ 4]   75     ei
    00000019 ED 4D            [14]   76     reti
    00000020                         77     .org    0x20
    00000020 FB               [ 4]   78     ei
    00000021 ED 4D            [14]   79     reti
    00000028                         80     .org    0x28
    00000028 FB               [ 4]   81     ei
    00000029 ED 4D            [14]   82     reti
    00000030                         83     .org    0x30
    00000030 FB               [ 4]   84     ei
    00000031 ED 4D            [14]   85     reti
                                     86     
                                     87     ;;
                                     88     ;; Z80-MBC2 IM1 IRQ vector
                                     89     ;;
    00000038                         90     .org    0x38
    00000038 F5               [11]   91     push    af
    00000039 C5               [11]   92     push    bc
    0000003A D5               [11]   93     push    de
    0000003B E5               [11]   94     push    hl
    0000003C FD E5            [15]   95     push    iy
    0000003E CDr00r00         [17]   96     call    _IM1_IRQ_ISR
    00000041 FD E1            [14]   97     pop iy
    00000043 E1               [10]   98     pop hl
    00000044 D1               [10]   99     pop de
    00000045 C1               [10]  100     pop bc
    00000046 F1               [10]  101     pop af
    00000047 FB               [ 4]  102     ei
    00000048 ED 4D            [14]  103     reti
                                    104 
    00000100                        105     .org    0x100
    00000100                        106 init:
                                    107     ;; Set stack pointer directly above top of memory.
    00000100 31 00 00         [10]  108     ld  sp,#0x0000
                                    109 
                                    110     ;; Initialise global variables
    00000103 CDr00r00         [17]  111     call    gsinit
    00000106 CDr00r00         [17]  112     call    _main
    00000109 C3r04r00         [10]  113     jp  _exit
                                    114 
                                    115     ;; Ordering of segments for the linker.
                                    116     .area   _HOME
                                    117     .area   _CODE
                                    118     .area   _INITIALIZER
                                    119     .area   _GSINIT
                                    120     .area   _GSFINAL
                                    121 
                                    122     .area   _DATA
                                    123     .area   _INITIALIZED
                                    124     .area   _BSEG
                                    125     .area   _BSS
                                    126     .area   _HEAP
                                    127 
                                    128     .area   _CODE
    00000000                        129 __clock::
    00000000 3E 02            [ 7]  130     ld  a,#2
    00000002 CF               [11]  131     rst 0x08
    00000003 C9               [10]  132     ret
                                    133 
    00000004                        134 _exit::
                                    135     ;; Exit - special code to the emulator
    00000004 3E 00            [ 7]  136     ld  a,#0
    00000006 CF               [11]  137     rst 0x08
    00000007                        138 1$:
    00000007 76               [ 4]  139     halt
    00000008 18 FD            [12]  140     jr  1$
                                    141 
                                    142     .area   _GSINIT
    00000000                        143 gsinit::
                                    144 
                                    145     ; Default-initialized global variables.
    00000000 01r00r00         [10]  146     ld      bc, #l__DATA
    00000003 78               [ 4]  147     ld      a, b
    00000004 B1               [ 4]  148     or      a, c
    00000005 28 0F            [12]  149     jr      Z, zeroed_data
    00000007 21r00r00         [10]  150     ld      hl, #s__DATA
    0000000A 36 00            [10]  151     ld      (hl), #0x00
    0000000C 0B               [ 6]  152     dec     bc
    0000000D 78               [ 4]  153     ld      a, b
    0000000E B1               [ 4]  154     or      a, c
    0000000F 28 05            [12]  155     jr      Z, zeroed_data
    00000011 5D               [ 4]  156     ld      e, l
    00000012 54               [ 4]  157     ld      d, h
    00000013 13               [ 6]  158     inc     de
    00000014 ED B0            [21]  159     ldir
    00000016                        160 zeroed_data:
                                    161 
                                    162     ; Explicitly initialized global variables.
    00000016 01r00r00         [10]  163     ld  bc, #l__INITIALIZER
    00000019 78               [ 4]  164     ld  a, b
    0000001A B1               [ 4]  165     or  a, c
    0000001B 28 08            [12]  166     jr  Z, gsinit_next
    0000001D 11r00r00         [10]  167     ld  de, #s__INITIALIZED
    00000020 21r00r00         [10]  168     ld  hl, #s__INITIALIZER
    00000023 ED B0            [21]  169     ldir
                                    170 
    00000025                        171 gsinit_next:
                                    172 
                                    173     .area   _GSFINAL
    00000000 C9               [10]  174     ret
